import React from 'react'
import { motion } from 'framer-motion'

const Roadmap = () => {
  const roadmapData = [
    {
      quarter: "Q4 2025",
      title: "–ó–∞–ø—É—Å–∫ –∏ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
      status: "current",
      items: [
        { icon: "‚úÖ", text: "–ó–∞–ø—É—Å–∫ —Å–∞–π—Ç–∞ –∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–æ—Ü—Å–µ—Ç–µ–π" },
        { icon: "üöÄ", text: "–†–µ–ª–∏–∑ MVP –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è" },
        { icon: "üß™", text: "–ó–∞–∫—Ä—ã—Ç–æ–µ –±–µ—Ç–∞-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –±–ª–æ–≥–µ—Ä–∞–º–∏" },
        { icon: "üìù", text: "–ü–æ–¥–∞—á–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ App Store –∏ Google Play" }
      ]
    },
    {
      quarter: "Q1 2026", 
      title: "–í—ã—Ö–æ–¥ –Ω–∞ —Ä—ã–Ω–æ–∫ –∏ –†–æ—Å—Ç",
      status: "upcoming",
      items: [
        { icon: "üéâ", text: "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö" },
        { icon: "üéÆ", text: "–ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤—ã—Ö –∏–≥—Ä –æ—Ç Game Lab" },
        { icon: "‚öôÔ∏è", text: "–í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≥—Ä–∞–¥ –∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ XCAH" },
        { icon: "üìà", text: "–¶–µ–ª—å: 100,000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" }
      ]
    },
    {
      quarter: "Q2 2026",
      title: "–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞", 
      status: "upcoming",
      items: [
        { icon: "ü§ù", text: "–ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π –∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤" },
        { icon: "üõ†Ô∏è", text: "–ù–∞—á–∞–ª–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ App Hub" },
        { icon: "üé§", text: "–ê–∫—Ç–∏–≤–Ω–∞—è –º–µ–¥–∏–∞-–∫–∞–º–ø–∞–Ω–∏—è —Å –±–ª–æ–≥–µ—Ä–∞–º–∏" },
        { icon: "üìà", text: "–¶–µ–ª—å: 300,000 - 500,000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" }
      ]
    },
    {
      quarter: "Q3 2026",
      title: "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≠–∫–æ—Å–∏—Å—Ç–µ–º—ã",
      status: "upcoming",
      items: [
        { icon: "üöÄ", text: "–ó–∞–ø—É—Å–∫ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ" }, 
        { icon: "üíª", text: "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏" },
        { icon: "üïπÔ∏è", text: "–†–µ–ª–∏–∑ –Ω–æ–≤—ã—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–≥—Ä" },
        { icon: "üìà", text: "–¶–µ–ª—å: 1,000,000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" }
      ]
    }
  ]

  const getStatusColor = (status) => {
    switch (status) {
      case 'current': return 'bg-yellow-500 border-yellow-500'
      case 'upcoming': return 'bg-gray-600 border-gray-500'
      default: return 'bg-gray-400 border-gray-400'
    }
  }

  const getStatusText = (status) => {
    switch (status) {
      case 'current': return '–¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø'
      case 'upcoming': return '–ë—É–¥—É—â–∏–π —ç—Ç–∞–ø'
      default: return '–ó–∞–≤–µ—Ä—à–µ–Ω'
    }
  }

  return (
    <section id="roadmap" className="py-20 bg-white">
      <div className="container mx-auto px-4">
        <motion.div 
          className="text-center mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
        >
          <h2 className="text-4xl md:text-5xl font-bold mb-6 text-black">
            –ù–∞—à –ø—É—Ç—å: –æ—Ç –∏–¥–µ–∏ –¥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            –ú—ã —Å—Ç–∞–≤–∏–º –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–µ, –Ω–æ –¥–æ—Å—Ç–∏–∂–∏–º—ã–µ —Ü–µ–ª–∏. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º!
          </p>
        </motion.div>

        <div className="relative">
          {/* –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
          <div className="hidden lg:block absolute left-1/2 top-0 bottom-0 w-1 bg-gradient-to-b from-yellow-500 to-gray-300 transform -translate-x-1/2"></div>
          
          <div className="space-y-12 lg:space-y-0">
            {roadmapData.map((stage, index) => (
              <motion.div
                key={stage.quarter}
                className={`flex flex-col lg:flex-row items-center ${
                  index % 2 === 0 ? 'lg:flex-row-reverse' : ''
                }`}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: index * 0.2 }}
              >
                {/* –¢–æ—á–∫–∞ –Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ª–∏–Ω–∏–∏ */}
                <div className="hidden lg:flex w-1/2 justify-center">
                  <div className={`w-6 h-6 rounded-full border-4 border-white shadow-lg z-10 ${getStatusColor(stage.status)}`}></div>
                </div>

                {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
                <div className={`w-full lg:w-1/2 ${index % 2 === 0 ? 'lg:pr-12' : 'lg:pl-12'} mb-8 lg:mb-0`}>
                  <div className={`bg-gradient-to-br from-gray-50 to-white rounded-2xl p-8 shadow-xl border-2 ${
                    stage.status === 'current' ? 'border-yellow-500' : 'border-gray-200'
                  } transition-all duration-300 hover:shadow-2xl`}>
                    <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
                      <div className="flex items-center mb-2 sm:mb-0">
                        <div className={`w-3 h-3 rounded-full mr-3 lg:hidden ${getStatusColor(stage.status)}`}></div>
                        <span className="text-yellow-600 font-bold text-xl">{stage.quarter}</span>
                      </div>
                      <span className={`px-3 py-1 rounded-full text-sm font-semibold ${
                        stage.status === 'current' ? 'bg-yellow-500 text-black' : 'bg-gray-200 text-gray-700'
                      }`}>
                        {getStatusText(stage.status)}
                      </span>
                    </div>
                    
                    <h3 className="text-2xl font-bold mb-6 text-black">{stage.title}</h3>
                    
                    <div className="grid gap-4">
                      {stage.items.map((item, itemIndex) => (
                        <div key={itemIndex} className="flex items-center space-x-4 p-3 bg-white rounded-lg border border-gray-100">
                          <span className="text-2xl">{item.icon}</span>
                          <span className="text-gray-700 font-medium">{item.text}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>

                {/* –ü—É—Å—Ç–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏—è */}
                <div className="hidden lg:block w-1/2"></div>
              </motion.div>
            ))}
          </div>
        </div>
      </div>
    </section>
  )
}

export default Roadmap