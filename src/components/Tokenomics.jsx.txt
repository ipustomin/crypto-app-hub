import React from 'react'
import { motion } from 'framer-motion'

const Tokenomics = () => {
  const tokenomicsData = [
    { name: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –∏ Airdrop', percentage: 40, amount: '4 000 000 000', color: 'bg-yellow-500' },
    { name: '–§–æ–Ω–¥ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏ (DEX)', percentage: 25, amount: '2 500 000 000', color: 'bg-black' },
    { name: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ –ë–∞—É–Ω—Ç–∏', percentage: 20, amount: '2 000 000 000', color: 'bg-gray-600' },
    { name: '–†–µ–∑–µ—Ä–≤–Ω—ã–π —Ñ–æ–Ω–¥', percentage: 15, amount: '1 500 000 000', color: 'bg-gray-400' }
  ]

  const tokenFunctions = [
    {
      icon: "üéÅ",
      title: "–ù–∞–≥—Ä–∞–¥–∞ –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞",
      description: "–ü–æ–ª—É—á–∞–π—Ç–µ XCAH –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π –≤ Community Hub –∏ –¥—Ä—É–≥—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å."
    },
    {
      icon: "üí≥",
      title: "–û–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥", 
      description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ XCAH –¥–ª—è –æ–ø–ª–∞—Ç—ã –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –≤ PR Hub –∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏—è–º —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã."
    },
    {
      icon: "üìà",
      title: "–†–æ—Å—Ç –∏ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å",
      description: "–ü–æ –º–µ—Ä–µ —Ä–æ—Å—Ç–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Ç–µ—Ç –∏ —Å–ø—Ä–æ—Å –Ω–∞ —Ç–æ–∫–µ–Ω XCAH, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö."
    }
  ]

  // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
  const calculateDashArray = () => {
    let currentOffset = 0
    return tokenomicsData.map(item => {
      const dashArray = `${item.percentage} ${100 - item.percentage}`
      const dashOffset = -currentOffset
      currentOffset += item.percentage
      return { ...item, dashArray, dashOffset }
    })
  }

  const chartData = calculateDashArray()

  return (
    <section id="tokenomics" className="py-20 gradient-bg text-white">
      <div className="container mx-auto px-4">
        <motion.div 
          className="text-center mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
        >
          <h2 className="text-4xl md:text-5xl font-bold mb-6">
            XCAH ‚Äî –¢–æ–ø–ª–∏–≤–æ –Ω–∞—à–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
          </h2>
          <p className="text-xl text-gray-300 max-w-3xl mx-auto">
            XCAH ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä–æ–≤–∞—è –º–æ–Ω–µ—Ç–∞, –∞ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–≤—è–∑—ã–≤–∞–µ—Ç –≤—Å–µ —á–∞—Å—Ç–∏ Crypto App Hub, –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.
          </p>
        </motion.div>

        <div className="grid lg:grid-cols-2 gap-12 items-start">
          {/* –î–∏–∞–≥—Ä–∞–º–º–∞ */}
          <motion.div
            className="bg-gray-900/50 rounded-3xl p-8 backdrop-blur-sm border border-gray-700"
            initial={{ opacity: 0, x: -30 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.8 }}
          >
            <h3 className="text-2xl font-bold mb-8 text-center text-yellow-500">–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤</h3>
            
            <div className="text-center mb-8">
              <div className="text-5xl font-bold text-white mb-2">10 000 000 000</div>
              <div className="text-gray-400 text-xl">XCAH</div>
              <div className="text-gray-500 mt-2">–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ</div>
            </div>
            
            {/* –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ */}
            <div className="relative w-64 h-64 mx-auto mb-8">
              <svg viewBox="0 0 100 100" className="w-full h-full transform -rotate-90">
                {chartData.map((item, index) => (
                  <circle
                    key={item.name}
                    cx="50"
                    cy="50"
                    r="40"
                    fill="transparent"
                    stroke="currentColor"
                    strokeWidth="20"
                    strokeDasharray={item.dashArray}
                    strokeDashoffset={item.dashOffset}
                    className={item.color === 'bg-yellow-500' ? 'text-yellow-500' : 
                              item.color === 'bg-black' ? 'text-black' :
                              item.color === 'bg-gray-600' ? 'text-gray-600' : 'text-gray-400'}
                  />
                ))}
              </svg>
              <div className="absolute inset-0 flex items-center justify-center">
                <div className="text-center transform rotate-90">
                  <div className="text-2xl font-bold text-white">100%</div>
                </div>
              </div>
            </div>

            {/* –õ–µ–≥–µ–Ω–¥–∞ */}
            <div className="space-y-4">
              {tokenomicsData.map((item, index) => (
                <div key={item.name} className="flex items-center justify-between p-3 bg-gray-800/50 rounded-lg">
                  <div className="flex items-center">
                    <div className={`w-4 h-4 ${item.color} rounded mr-3`}></div>
                    <span className="font-medium text-white">{item.name}</span>
                  </div>
                  <div className="text-right">
                    <div className="font-semibold text-yellow-500">{item.percentage}%</div>
                    <div className="text-sm text-gray-400">{item.amount}</div>
                  </div>
                </div>
              ))}
            </div>
          </motion.div>

          {/* –§—É–Ω–∫—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞ */}
          <motion.div
            initial={{ opacity: 0, x: 30 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.8 }}
          >
            <h3 className="text-3xl font-bold mb-8 text-yellow-500">–ö–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞</h3>
            <div className="space-y-6 mb-8">
              {tokenFunctions.map((func, index) => (
                <motion.div
                  key={func.title}
                  className="bg-gray-900/50 rounded-2xl p-6 border-l-4 border-yellow-500 backdrop-blur-sm hover:bg-gray-800/50 transition-all duration-300"
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                >
                  <div className="flex items-start space-x-4">
                    <div className="text-3xl">{func.icon}</div>
                    <div>
                      <h4 className="text-xl font-semibold mb-2 text-white">{func.title}</h4>
                      <p className="text-gray-300 leading-relaxed">{func.description}</p>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>

            <div className="bg-yellow-500/10 rounded-2xl p-6 border border-yellow-500/30">
              <h4 className="text-lg font-semibold mb-3 text-yellow-500">–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞</h4>
              <p className="text-yellow-400 mb-4">
                –ú—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º —á–µ—Å—Ç–Ω–æ–µ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —É—Å—Ç–æ–π—á–∏–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞.
              </p>
              <div className="text-yellow-500 font-bold text-lg">
                –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: 10 000 000 000 XCAH
              </div>
            </div>
          </motion.div>
        </div>
      </div>
    </section>
  )
}

export default Tokenomics